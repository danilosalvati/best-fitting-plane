{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2d9c1f7bc7e50c07dc93","webpack:///./src/index.js","webpack:///./src/LSE.js","webpack:///external {\"commonjs\":\"mathjs\",\"commonjs2\":\"mathjs\",\"amd\":\"mathjs\",\"root\":\"math\"}"],"names":["points","Array","TypeError","length","forEach","point","Object","isNaN","x","y","z","M1Rows","M2Rows","push","M1","math","matrix","M2","M1_T","transpose","resultMatrix","multiply","inv","A","get","B","C"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA;;;;;;;;;;;ACAA;;AAEA;;;;;AAKA,yDAAe,UAACA,MAAD,EAAY;AACzB;;AAEA;AACA,MAAI,EAAEA,kBAAkBC,KAApB,CAAJ,EAAgC;AAC9B,UAAM,IAAIC,SAAJ,CAAc,wDAAd,CAAN;AACD;;AAED,MAAIF,OAAOG,MAAP,GAAgB,CAApB,EAAuB;AACrB,UAAM,IAAID,SAAJ,CAAc,kDAAd,CAAN;AACD;;AAEDF,SAAOI,OAAP,CAAe,iBAAS;AACtB,QAAI,EAAEC,iBAAiBC,MAAnB,CAAJ,EAAgC;AAC9B,YAAM,IAAIJ,SAAJ,CAAc,2CAClB,oEADI,CAAN;AAED,KAHD,MAGO;AACL,UAAIK,MAAMF,MAAMG,CAAZ,KACFD,MAAMF,MAAMI,CAAZ,CADE,IAEFF,MAAMF,MAAMK,CAAZ,CAFF,EAEkB;AAChB,cAAM,IAAIR,SAAJ,CAAc,2CAClB,oEADI,CAAN;AAED;AACF;AACF,GAZD;;AAcA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIS,SAAS,EAAb;AACA,MAAIC,SAAS,EAAb;;AAEAZ,SAAOI,OAAP,CAAe,iBAAS;AACtBO,WAAOE,IAAP,CAAY,CAACR,MAAMG,CAAP,EAAUH,MAAMI,CAAhB,EAAmB,CAAnB,CAAZ;AACAG,WAAOC,IAAP,CAAY,CAACR,MAAMK,CAAP,CAAZ;AACD,GAHD;;AAKA,MAAII,KAAK,8CAAAC,CAAKC,MAAL,CAAYL,MAAZ,CAAT;AACA,MAAIM,KAAK,8CAAAF,CAAKC,MAAL,CAAYJ,MAAZ,CAAT;;AAEA,MAAIM,OAAO,8CAAAH,CAAKI,SAAL,CAAeL,EAAf,CAAX,CA5CyB,CA4CK;;AAE9B,MAAIM,eAAe,8CAAAL,CAAKM,QAAL,CAAc,8CAAAN,CAAKO,GAAL,CAAS,8CAAAP,CAAKM,QAAL,CAAcH,IAAd,EAAoBJ,EAApB,CAAT,CAAd,EAAiDI,IAAjD,EAAuDD,EAAvD,CAAnB;;AAEA;AACA,MAAIM,IAAIH,aAAaI,GAAb,CAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAAR;AACA,MAAIC,IAAIL,aAAaI,GAAb,CAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAAR;AACA,MAAIE,IAAIN,aAAaI,GAAb,CAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAAR;;AAEA,SAAO,EAACD,IAAD,EAAIE,IAAJ,EAAOC,IAAP,EAAP;AACD,CAtDD,E;;;;;;ACPA,+C","file":"best-fitting-plane.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"mathjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"mathjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"BestFittingPlane\"] = factory(require(\"mathjs\"));\n\telse\n\t\troot[\"BestFittingPlane\"] = factory(root[\"math\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2d9c1f7bc7e50c07dc93","import LSE from './LSE'\n\nexport {\n  LSE\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import math from 'mathjs'\n\n/**\n * Implementation of a Least Square Evaluation function as descripted in\n * https://www.geometrictools.com/Documentation/LeastSquaresFitting.pdf (par. 3)\n * This will return a plane in the form Ax + By + C = z\n */\nexport default (points) => {\n  // INPUT VALIDATION\n\n  // Check if the input array is well-formed\n  if (!(points instanceof Array)) {\n    throw new TypeError('This function accepts only an Array of points as input')\n  }\n\n  if (points.length < 3) {\n    throw new TypeError('You need at least three points to define a plane')\n  }\n\n  points.forEach(point => {\n    if (!(point instanceof Object)) {\n      throw new TypeError('The input should contains only points ' +\n        'with the following structure: {x:<number>, y:<number>, z:<number>}')\n    } else {\n      if (isNaN(point.x) ||\n        isNaN(point.y) ||\n        isNaN(point.z)) {\n        throw new TypeError('The input should contains only points ' +\n          'with the following structure: {x:<number>, y:<number>, z:<number>}')\n      }\n    }\n  })\n\n  // TODO: Fix comment\n  // I should follow what is stated here:\n  // https://stackoverflow.com/a/44315221\n  // https://it.wikipedia.org/wiki/Pseudo-inversa\n  // I also need to investigate upon vertical planes...\n  // Probably I need to catch a pram for it\n\n  let M1Rows = []\n  let M2Rows = []\n\n  points.forEach(point => {\n    M1Rows.push([point.x, point.y, 1])\n    M2Rows.push([point.z])\n  })\n\n  let M1 = math.matrix(M1Rows)\n  let M2 = math.matrix(M2Rows)\n\n  let M1_T = math.transpose(M1) // transpose of M1\n\n  let resultMatrix = math.multiply(math.inv(math.multiply(M1_T, M1)), M1_T, M2)\n\n  // Get A, B and C constants\n  let A = resultMatrix.get([0, 0])\n  let B = resultMatrix.get([1, 0])\n  let C = resultMatrix.get([2, 0])\n\n  return {A, B, C}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/LSE.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"mathjs\",\"commonjs2\":\"mathjs\",\"amd\":\"mathjs\",\"root\":\"math\"}\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}